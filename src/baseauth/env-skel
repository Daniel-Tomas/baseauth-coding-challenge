## For development this can be set to True
# DEBUG=False

## If you are developing locally (with Django not running inside a container), set this to False
# DOCKER=True

## The base URL of the Django site, for local development http://127.0.0.1:8300/
SITE_URL=https://url/

## In a production deployment with other base components, this base path should
## be set for image. For local development set this explicitly to an empty string.
# FORCE_SCRIPT_NAME=/cas

## The accepted HTTP Host headers, Django will serve. Defaults to urlparse(SITE_URL).hostname
# ALLOWED_HOSTS=

## In a production environment Django will be deployed behind a nginx proxy.
## For local development, set this to False
# BEHIND_PROXY=True

## Set up admin notifications here
# DJANGO_ADMINS=Full Name <email-with-name@example.com>,anotheremailwithoutname@example.com
## The following users will have admin privileges in the django backend
# DJANGO_SUPERUSERS=(username1,username2)

## In a production setup you should set up the SMTP account to get notifications
# EMAIL_HOST_USER=
# EMAIL_HOST_PASSWORD=
# EMAIL_HOST=
# EMAIL_PORT=
# EMAIL_USE_TLS=
# EMAIL_USE_LOCALTIME=
# EMAIL_SUBJECT_PREFIX=[CAS]

## For cross-domain cookies (e.g. different services on different subdomains) set
## this to your base domain. In that case also adapt the CSRF_COOKIE_DOMAIN below
## accordingly. For single domain setups, the default (None) is fine.
# SESSION_COOKIE_DOMAIN=

## Set up CSRF and CORS settings here. For a local development server you
## might want to set CSRF_TRUSTED_ORIGINS to: localhost,127.0.0.1
# CSRF_COOKIE_DOMAIN=
# CSRF_TRUSTED_ORIGINS=
# CORS_ALLOW_CREDENTIALS=False
# CORS_ALLOW_ALL_ORIGINS=False
# CORS_ALLOWED_ORIGINS=

## The database port only needs to be changed, if you are running baseauth
## locally on an alternate port (e.g. because another db is already running on the
## default port. So use here whatever you set in your docker-compose.override.yml for
## baseauth-postgres or leave the comment to use the default:
# POSTGRES_PORT=5432
## The database name, user and password only need to be changed, in a local development
## environment, if they also changed in the ../../.env file
# POSTGRES_DB=django_cas
# POSTGRES_USER=django_cas
# POSTGRES_PASSWORD=password

## Similar to Postgres we also might need to change the Redis port, if
## the standard port is already in use by another container.
# REDIS_PORT=6379

## Here you configure the type of authentication backends, that should be used.
## See the configuration section in the docs for details.
# AUTHENTICATION_BACKENDS=django

## LDAP authentication (only needed if ldap occurs in the AUTHENTICATION_BACKENDS above)
## See the configuration section in the docs for details.
# AUTH_LDAP_SERVER_URI=
# AUTH_LDAP_BIND_DN=
# AUTH_LDAP_BIND_PASSWORD=
# AUTH_LDAP_USER_ATTR_MAP=first_name=givenName,last_name=sn,email=mail
# AUTH_LDAP_USER_DN_TEMPLATE=
# AUTH_LDAP_USER_SEARCH_BASE=
# AUTH_LDAP_USER_SEARCH_BASE_LIST=
# AUTH_LDAP_USER_SEARCH_USER_TEMPLATE=
